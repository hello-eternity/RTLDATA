Windows 10+#
For ease of installation, OpenLane uses Docker images.
These images include OpenLane’s applications, binaries as well as all the required dependencies.
All of the flow tools are encapsulated inside the container image.
OpenLane in Windows uses WSL 2 and Docker Destop on Windows.
A recent version of Windows 10 or Windows 11 is required, for more information consult Microsoft’s documentation.
The following is the recommended installation method under Windows. Other virtualization-based methods, such as VMWare, are not supported, and some such as VirtualBox are known to impair the operation of OpenLane.
Follow official Microsoft documentation for WSL located here to install the WSL 2. Make sure your OS version supports WSL 2.
Follow official steps to Install Docker Desktop on Windows located here.
Make sure that WSL 2 Docker engine is enabled and Settings -> Resource -> WSL Integration is enabled
Make sure that option Start Docker Desktop when you login is enabled in Docker Desktop -> Settings
Click the Windows icon, type in “Windows PowerShell” and open it.
Install Ubuntu using the following command: wsl --install -d Ubuntu
Check the verison of WSL using following command: wsl --list --verbose
It should produce following output:
PS C:\Users\user> wsl --list --verbose
NAME                   STATE           VERSION
* Ubuntu                 Running         2
docker-desktop         Running         2
docker-desktop-data    Running         2
If you get following output, then you need to launch Docker Desktop on Windows from the start menu.
PS C:\Users\user> wsl --list --verbose
NAME                   STATE           VERSION
* Ubuntu                 Running         2
docker-desktop         Stopped         2
docker-desktop-data    Stopped         2
Same goes for if you get an output that looks like this
PS C:\Users\user> docker run hello-world
The command 'docker' could not be found in this WSL 2 distro.
We recommend to activate the WSL integration in Docker Desktop settings.
For details about using Docker Desktop with WSL 2, visit:
https://docs.docker.com/go/wsl2/
Launch “Ubuntu” from your Start Menu.
Follow the steps shown below.
Installation of required packages#
Update packages database and upgrade the packages to avoid version mismatches then install required packages.
sudo apt-get update
sudo apt-get upgrade
sudo apt install -y build-essential python3 python3-venv python3-pip make git
Checking the Docker Installation#
After that, you can run Docker Hello World without root. To test it use the following command:
# After reboot
docker run hello-world
You will get a little happy message of Hello world, once again, but this time without root.
Hello from Docker!
This message shows that your installation appears to be working correctly.
To generate this message, Docker took the following steps:
1. The Docker client contacted the Docker daemon.
2. The Docker daemon pulled the "hello-world" image from the Docker Hub.
   (amd64)
3. The Docker daemon created a new container from that image which runs the
   executable that produces the output you are currently reading.
4. The Docker daemon streamed that output to the Docker client, which sent it
   to your terminal.
To try something more ambitious, you can run an Ubuntu container with:
$ docker run -it ubuntu bash
Share images, automate workflows, and more with a free Docker ID:
https://hub.docker.com/
For more examples and ideas, visit:
https://docs.docker.com/get-started/
Troubleshooting docker installation issues [Linux/Ubuntu only]#
If you get Docker permission error when running any Docker images, then likely,
you forgot to follow the steps to make Docker available without root or you need to restart your Operating System.
OpenLane> docker run hello-world
docker: Got permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Post "http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/create": dial unix /var/run/docker.sock: connect: permission denied.
See 'docker run --help'.
OpenLane>
Checking Installation Requirements#
In order to check the installation, you can use the following commands:
git --version
docker --version
python3 --version
python3 -m pip --version
make --version
python3 -m venv -h
Successful output will look like this:
git --version
docker --version
python3 --version
python3 -m pip --version
make --version
python3 -m venv -h
git version 2.36.1
Docker version 20.10.16, build aa7e414fdc
Python 3.10.5
pip 21.0 from /usr/lib/python3.10/site-packages/pip (python 3.10)
GNU Make 4.3
Built for x86_64-pc-linux-gnu
Copyright (C) 1988-2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
usage: venv [-h] [--system-site-packages] [--symlinks | --copies] [--clear]
            [--upgrade] [--without-pip] [--prompt PROMPT] [--upgrade-deps]
            ENV_DIR [ENV_DIR ...]
Creates virtual Python environments in one or more target directories.
...
Once an environment has been created, you may wish to activate it, e.g. by
sourcing an activate script in its bin directory.
Download and Install OpenLane#
Download OpenLane from GitHub:
git clone --depth 1 https://github.com/The-OpenROAD-Project/OpenLane.git
cd OpenLane/
make
make test
These steps will download and build OpenLane and sky130 PDK. Finally, it will run a ~5 minute test that verifies that the flow and the PDK were properly installed.
If you are planning to use another PDK, then you need to follow the PDK installation guide for that specific PDK.
Successful test will output the following line:
Basic test passed
Optional: Viewing Test Design Outputs#
Open the final layout using KLayout. This will open the window of KLayout in editing mode -e with sky130 technology.
# Enter a Docker session:
make mount
# Open the spm.gds using KLayout with sky130 PDK
klayout -e -nn $PDK_ROOT/sky130A/libs.tech/klayout/tech/sky130A.lyt \
   -l $PDK_ROOT/sky130A/libs.tech/klayout/tech/sky130A.lyp \
   ./designs/spm/runs/openlane_test/results/final/gds/spm.gds
# Leave the Docker
exit
See also
Quickstart guide
Ubuntu installation
Linux installation
macOS installation
Windows installation
